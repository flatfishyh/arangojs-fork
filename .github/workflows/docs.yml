name: Update docs

on:
  push:
    tags:
      - "v7.*.*" # all v7 semver release tags
    branches:
      - main

jobs:
  publish-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v1.4.2
        with:
          node-version: ">= 12"

      - uses: actions/checkout@v2

      - name: Checkout gh-pages
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: gh-pages

      - run: yarn

      - name: Set tag env to devel
        if: startsWith( github.event.ref, 'refs/heads/' )
        run: |
          echo "::set-env name=tag::devel"
          echo "::set-env name=latest::1"

      - name: Set tag env to ref tag
        if: startsWith( github.event.ref, 'refs/tags/v' )
        run: |
          export tag=$(echo ${{ github.event.ref }} | sed -e 's/^refs\/tags\/v//')
          echo "::set-env name=tag::${tag}"
          echo "::set-env name=latest::$(node -p "Number(require('semver').gt('${tag}','$(cat gh-pages/VERSION)'))")"

      - name: Update VERSION
        if: env.tag != 'devel' && env.latest == 1
        run: |
          echo $'---\npermalink: /VERSION\ntitle: "VERSION"\n---\n' > gh-pages/VERSION.md
          echo $tag >> gh-pages/VERSION

      - name: Update CHANGELOG
        if: env.latest == 1 # don't overwrite for backport versions
        run: |
          echo $'---\npermalink: /CHANGELOG\ntitle: "CHANGELOG"\n---\n' > gh-pages/CHANGELOG.md
          cat CHANGELOG.md >> gh-pages/CHANGELOG.md

      - name: Update MIGRATING
        if: env.latest == 1 # don't overwrite for backport versions
        run: |
          echo $'---\npermalink: /MIGRATING\ntitle: "Migrating"\n---\n' > gh-pages/MIGRATING.md
          cat MIGRATING.md >> gh-pages/MIGRATING.md

      - name: Remove old docs
        run: |
          rm -rf gh-pages/${tag}

      - name: Rebuild docs for tag
        if: env.tag != 'devel'
        run: |
          yarn typedoc --includeVersion --out gh-pages/${tag}
          node -p 'var all=fs.readdirSync("gh-pages",{withFileTypes:true}).flatMap(f=>f.isDirectory()&&!isNaN(f.name.charAt(0))?[f.name]:[]).sort(require("semver").rcompare);JSON.stringify({all,stable:all.filter(s=>!s.includes("-"))})' > gh-pages/_data/versions.json

      - name: Rebuild docs for devel
        if: env.tag == 'devel'
        run: |
          yarn typedoc --out gh-pages/${tag}

      - name: Commit to gh-pages
        uses: EndBug/add-and-commit@v4
        with:
          cwd: ./gh-pages
          ref: gh-pages
          message: Update ${{ env.tag }} docs via ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
